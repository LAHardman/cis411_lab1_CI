# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  docker: circleci/docker@1.7.0
  node: circleci/node@4.7

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  example-workflow:
      - build:
          working_directory: /app
          docker:
            - image: docker:17.05.0-ce-git
          steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Install dependencies
                command: |
                  apk add --no-cache \
                    py-pip=9.0.0-r1
                  pip install \
                    docker-compose==1.12.0 \
                    awscli==1.11.76
            - restore_cache:
                keys:
                  - v1-{{ .Branch }}
                paths:
                  - /caches/app.tar
            - run:
                name: Load Docker image layer cache
                command: |
                  set +o pipefail
                  docker load -i /caches/app.tar | true
            - run:
                name: Build application Docker image
                command: |
                  docker build --cache-from=app -t app .
            - run:
                name: Save Docker image layer cache
                command: |
                  mkdir -p /caches
                  docker save -o /caches/app.tar app
            - save_cache:
                key: v1-{{ .Branch }}-{{ epoch }}
                paths:
                  - /caches/app.tar
            - run:
                name: Run tests
                command: |
                  docker-compose -f ./docker-compose.test.yml up
            - deploy:
                name: Push application Docker image
                command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    login="$(aws ecr get-login)"
                    ${login}
                    docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
                    docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
                  fi
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - run-task
